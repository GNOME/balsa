AC_INIT(src/main.c)
AM_CONFIG_HEADER(config.h)

dnl
dnl take care of version
dnl
BALSA_MAJOR=0
BALSA_REVISION=6
BALSA_PATCHLEVEL=0
BALSA_VERSION="$BALSA_MAJOR.$BALSA_REVISION.$BALSA_PATCHLEVEL"
VERSION="$BALSA_MAJOR.$BALSA_REVISION.$BALSA_PATCHLEVEL"

dnl configure libmutt
AC_CONFIG_SUBDIRS(libmutt)

AM_INIT_AUTOMAKE(balsa, [$VERSION])

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AC_ISC_POSIX

AM_PATH_GLIB([1.2.0],,AC_MSG_ERROR([You need GLib installed -- GNOME requires this as well.]),gthread)
GNOME_INIT

AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LEX
AC_PROG_YACC
AM_PROG_LIBTOOL


dnl this should come after `AC_PROG_CC'
GNOME_X_CHECKS

balsa_save_LDFLAGS="$LDFLAGS"
balsa_save_LIBS="$LIBS"

LDFLAGS="$LDFLAGS `echo $GTK_LIBS | sed 's/\(.*\)\(-lgtk.*\)/\1/'`"
LIBS="$LIBS $GTK_LIBS"

AC_CHECK_LIB(PropList, PLGetProplistWithPath, ,
AC_MSG_ERROR([*** libPropList not found.  Please check http://www.balsa.net for information on the required files.]),)

LDFLAGS="$balsa_save_LDFLAGS"
LIBS="$balsa_save_LIBS"

ALL_LINGUAS="da de el es et fi fr ga ja ko no it nl pl ru pt_BR sv uk zh_CN"
AM_GNU_GETTEXT


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

gnome_cv_use_gnome=yes

AC_DEFINE_UNQUOTED(BALSA_MAJOR, $BALSA_MAJOR)
AC_DEFINE_UNQUOTED(BALSA_REVISION, $BALSA_REVISION)
AC_DEFINE_UNQUOTED(BALSA_PATCHLEVEL, $BALSA_PATCHLEVEL)
AC_DEFINE_UNQUOTED(BALSA_VERSION, "$BALSA_VERSION")

AC_CHECK_LIB(crypt, crypt)

dnl these may be used later.
dnl AC_CHECK_LIB(des, des_encrypt)
dnl AC_CHECK_LIB(krb, krb_sendauth)
dnl AC_CHECK_LIB(acap, acap_OpenConnection)


AM_HDR_SIGACTION
AM_HDR_SIGSET


dnl ORBit support
AC_CHECK_PROG(ORBIT_CONFIG, orbit-config, orbit-config)
if test -n "$ORBIT_CONFIG"; then
	ORBIT_LIBS="`orbit-config --libs client server --use-service=name`"
	ORBIT_CFLAGS="`orbit-config --cflags client server --use-service=name`"
fi
AC_SUBST(ORBIT_CFLAGS)
AC_SUBST(ORBIT_LIBS)
AM_CONDITIONAL(ORBIT_INSTALLED, test -n "$ORBIT_LIBS")

ORB_LIBS="$ORBIT_LIBS"
ORB_CFLAGS="$ORBIT_CFLAGS"

AC_SUBST(ORB_LIBS)
AC_SUBST(ORB_CFLAGS)

dnl Automake @VARIABLE@ exports.
AC_SUBST(BALSA_MAJOR)
AC_SUBST(BALSA_REVISION)
AC_SUBST(BALSA_PATCHLEVEL)
AC_SUBST(BALSA_VERSION)
AC_SUBST(LIBOBJS)
AC_SUBST(LIBESD_LIB)

dnl ######################################################################################
dnl Enable all?
dnl ######################################################################################

AC_ARG_ENABLE(all, [  --enable-all            Enable incomplete features [default=no]],[
	AC_DEFINE(BALSA_SHOW_ALL)
	use_all=yes
],[
	use_all=no
])

dnl ######################################################################################
dnl Enable information in the mailbox list?
dnl ######################################################################################

AC_ARG_ENABLE(info, [  --enable-info           Enable mailbox info [default=yes]],[
	if test "$enableval" = "yes" ; then
		AC_DEFINE(BALSA_SHOW_INFO)
		use_info="$enableval"
	else
		use_info="$enableval"
	fi
],[
	AC_DEFINE(BALSA_SHOW_INFO)
	use_info='yes'
])

dnl ######################################################################################
dnl Use threading?
dnl ######################################################################################

AC_ARG_ENABLE(threads, [  --enable-threads        Use threading for mail retrieval (unstable) [default=no]],[
	use_threads=$enableval
],[
	use_threads=no
])

AC_MSG_CHECKING([whether to use threads])
if test x"$use_threads" = xyes ; then
	AC_MSG_RESULT([yes])
	if test ! -z `$GLIB_CONFIG --help 2>&1 |grep 'gthread'` ; then
		THREAD_CFLAGS=`$GLIB_CONFIG --cflags gthread`
		THREAD_LIBS=`$GLIB_CONFIG --libs gthread`
		CFLAGS="$CFLAGS $THREAD_CFLAGS"
		LIBS="$LIBS $THREAD_LIBS"
		AC_DEFINE(BALSA_USE_THREADS,1)
	else
		AC_MSG_ERROR([Balsa requires GThread from GLib to use threading.])
	fi
else
	AC_MSG_RESULT([no])
fi

dnl ######################################################################################
dnl Create website?
dnl ######################################################################################

AC_ARG_WITH(website, [  --with-website=ROOT     If specified, create the website data with specified root (developer only)],[
	with_website=$withval
],[
	with_website=no
])

AC_MSG_CHECKING([whether to create the website])
if test x"$with_website" != xno ; then
	website_subdir=website
	website_used=yes
	website_root="http://www.balsa.net"
	test -z "$with_website" || website_root=$withval
	website_desc="yes; root $website_root"
else
	website_subdir=
	website_used=no
	website_root=
	website_desc="no"
fi

AC_MSG_RESULT([$website_desc])
AC_SUBST(website_subdir)
AC_SUBST(website_root)

dnl ######################################################################################
dnl Website prefix?
dnl ######################################################################################

AC_ARG_WITH(website-prefix, [  --with-website-prefix=PREFIX Install the website files into PREFIX],[
	with_website_prefix=$withval
],[
	with_website_prefix=no
])

AC_MSG_CHECKING([whether and where to install the website])
if test x"$with_website_prefix" != xno ; then
	if test x"$website_used" = xyes ; then
		website_prefix=$withval
		website_installed=yes
		website_install_desc="yes; $withval"
	else
		AC_MSG_ERROR([You must specify --with-website to use --with-website-prefix])
	fi
else
	website_prefix=
	website_installed=no
	website_install_desc=no
fi

AC_MSG_RESULT([$website_install_desc])
AC_SUBST(website_prefix)
AC_SUBST(website_installed)
AC_SUBST(website_install_desc)
AM_CONDITIONAL(WEBSITE_INSTALLED, [test x$website_installed = xyes])

dnl ######################################################################################
dnl Install into gnome locations? (may require priveleges that we don't have)
dnl ######################################################################################

AC_ARG_ENABLE([system-install], [  --disable-system-install Don't install some files into Gnome's prefix],[
	use_system_install=$enableval
],[
	if test x"$BALSA_DISTCHECK_HACK" = xyes ; then
		use_system_install=no
	else
		use_system_install=yes
	fi
])

AC_MSG_CHECKING([whether to install into Gnome's prefix])
if test x"$use_system_install" = xyes ; then
	AC_MSG_RESULT([yes])
	gnomedatadir=`${GNOME_CONFIG} --datadir`
	gnomeconfdir=`${GNOME_CONFIG} --sysconfdir`
else
	AC_MSG_RESULT([no])
	gnomedatadir=`eval "echo ${datadir}"`
	gnomeconfdir=`eval "echo ${sysconfdir}"`
fi

AC_SUBST(gnomedatadir)
AC_SUBST(gnomeconfdir)

dnl ######################################################################################
dnl Remember our prefixes
dnl ######################################################################################

dnl datadir='${prefix}/share', so we must eval it or something. This works
BALSA_STD_PREFIX=`eval "echo ${prefix}"`
BALSA_DATA_PREFIX=`eval "echo ${datadir}"`
GNOME_STD_PREFIX=`${GNOME_CONFIG} --prefix`
GNOME_LIB_PREFIX=`${GNOME_CONFIG} --libdir`
GNOME_DATA_PREFIX=`${GNOME_CONFIG} --datadir`

dnl Consolidate them!
BALSA_COMMON_PREFIXES=`cat <<EOF |sort |uniq
"${BALSA_STD_PREFIX}",
"${BALSA_DATA_PREFIX}",
"${GNOME_STD_PREFIX}",
"${GNOME_DATA_PREFIX}",
"${GNOME_LIB_PREFIX}",
EOF
`

dnl Better way to do this?
AC_DEFINE_UNQUOTED( BALSA_STD_PREFIX, "$BALSA_STD_PREFIX" )
AC_DEFINE_UNQUOTED( BALSA_DATA_PREFIX, "$BALSA_DATA_PREFIX" )
AC_DEFINE_UNQUOTED( GNOME_STD_PREFIX, "$GNOME_STD_PREFIX" )
AC_DEFINE_UNQUOTED( GNOME_LIB_PREFIX, "$GNOME_LIB_PREFIX" )
AC_DEFINE_UNQUOTED( GNOME_DATA_PREFIX, "$GNOME_DATA_PREFIX" )
AC_DEFINE_UNQUOTED( BALSA_COMMON_PREFIXES, `echo $BALSA_COMMON_PREFIXES` ) dnl bleah

dnl ######################################################################################
dnl Create files.
dnl ######################################################################################

AC_OUTPUT([
Makefile
balsa.1
balsa.spec
po/Makefile.in
macros/Makefile
intl/Makefile
sounds/Makefile
images/Makefile
help/Makefile
help/C/Makefile
libbalsa/Makefile
libinit_balsa/Makefile
idl/Makefile
src/Makefile
website/Makefile
website/images/Makefile
website/screens/Makefile
])

echo "========= Final configuration ==================="
echo "    Installing into prefix: $prefix"
echo "      Using multithreading: $use_threads"
echo " Using incomplete features: $use_all"
echo "        Using mailbox info: $use_info"
echo "      Creating the website: $website_desc"
echo "    Installing the website: $website_install_desc"
echo "Installing some files into  "
echo "            Gnome's prefix: $use_system_install (may require root privileges)"

/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */

/*
 * fairly stolen from evolution
 */



#include <Bonobo.idl>

module GNOME {
	module Balsa {
	
		interface Composer : Bonobo::Unknown {
			struct Recipient {
				string name;	/* UTF-8 */
				string address;
			};
			typedef sequence<Recipient> RecipientList;
			
			typedef sequence<char> AttachmentData;
			
			enum MultipartType {
				MIXED,
				ALTERNATIVE
			};
			
			/**
			 * setHeaders:
			 * @from: the "From" account or address
			 * @to: the "To" recipients
			 * @cc: the "CC" recipients
			 * @bcc: the "Bcc" recipients
			 * @subject: the subject of the message
			 *
			 * Sets the composer headers. Any of @to, @cc, and
			 * @bcc may be an empty list, and @subject may be an
			 * empty string. If @from is empty or invalid, the
			 * default account will be used. Otherwise is
			 * specifies an account name or email address to send
			 * from.
			 **/
			void setHeaders (in string from, in RecipientList to,
					 in RecipientList cc, in RecipientList bcc,
					 in string subject);
			
			
			/**
			 * attachMIME:
			 * @data: the attachment data
			 *
			 * This adds an attachment to the composer. @data
			 * should be a fully-formed MIME body part.
			 **/
			exception CouldNotParse {};
			void attachMIME (in string data)
				raises (CouldNotParse);


			/**
			 * show:
			 *
			 * Shows the composer and lets the user edit things
			 * and send the message.
			 **/
			void show ();


		};
	};
};

%h{
/*
 * Balsa E-Mail Client
 * Copyright (C) 1997-1999 Jay Painter and Stuart Parmenter
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option) 
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
 * 02111-1307, USA.
 */

#include "config.h"
#include <gnome.h>
#include "helper.h"
#include "balsa-initdruid.h"
#include "balsa-druid-page.h"
%}

%{
#include "save-restore.h"
%}

class Balsa:Druid:Page:Finish from Balsa:Druid:Page {
	private GtkWidget *text;

	public Gtk:Object *new( void ) { 
		GtkObject *self = GTK_OBJECT( GET_NEW );
		if( BALSA_DRUID_PAGE_CLASS( (GTK_OBJECT( self ))->klass )->construct )
			BALSA_DRUID_PAGE_CLASS( (GTK_OBJECT( self ))->klass )->construct( BALSA_DRUID_PAGE( self ) );
		return self;
	 }

	init( self ) {
		self->_priv->text = gtk_label_new( _(
			"You've successfully set up Balsa. Have fun!\n"
			"   -- The Balsa development team"
			) );
		gtk_label_set_justify( GTK_LABEL( self->_priv->text ), GTK_JUSTIFY_CENTER );
		gtk_box_pack_start( GTK_BOX( (GNOME_DRUID_PAGE_STANDARD( self ))->vbox ), GTK_WIDGET( self->_priv->text ),
			TRUE, TRUE, 8 );
	}

	override (Balsa:Druid:Page) void
	construct( Balsa:Druid:Page *self ) {
		GnomeDruidPageStandard *std = GNOME_DRUID_PAGE_STANDARD( self );

		std->title = g_strdup( _("All Done!") );
		PARENT_HANDLER( self );
	}

	override (Gnome:Druid:Page) void
	prepare( Gnome:Druid:Page *_self, Gtk:Widget *druid (check type null) ) {
		BalsaDruidPageFinish *self = BALSA_DRUID_PAGE_FINISH( _self );

		gnome_druid_page_standard_set_logo( GNOME_DRUID_PAGE_STANDARD( self ), (BALSA_INITDRUID( druid ))->default_logo );
		gnome_druid_set_buttons_sensitive( GNOME_DRUID( druid ), TRUE, FALSE, TRUE );
		gnome_druid_set_show_finish( GNOME_DRUID( druid ), TRUE );
	}

	override (Gnome:Druid:Page) void
	finish( Gnome:Druid:Page *_self, Gtk:Widget *druid (check type null) ) {
		config_global_save();
		balsa_initdruid_finished( BALSA_INITDRUID( druid ) );
	}
}
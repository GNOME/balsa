dnl Process this file with autoconf to produce a configure script.
AC_INIT(mutt.h)

MUTT_MAJOR=0
MUTT_REVISION=93
MUTT_PATCHLEVEL=2
MUTT_VERSION="$MUTT_MAJOR.$MUTT_REVISION.$MUTT_PATCHLEVEL"
VERSION=$MUTT_VERSION

AM_INIT_AUTOMAKE(libmutt, $VERSION, no-define)

AM_CONFIG_HEADER(muttconfig.h)

AM_PROG_LIBTOOL

AM_MAINTAINER_MODE

AC_CANONICAL_HOST

AC_MSG_CHECKING(for prefix)
if test x$prefix = xNONE; then
	mutt_cv_prefix=$ac_default_prefix
else
	mutt_cv_prefix=$prefix
fi
AC_MSG_RESULT($mutt_cv_prefix)

AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL

case "$host" in
*-*-hpux*)
	if test -z "$GCC" ; then
		CFLAGS="$CFLAGS -Ae -D_HPUX_SOURCE"
	fi
	;;
esac

AC_PATH_PROG(SENDMAIL, sendmail, no, `echo $PATH | sed "s/:/ /"` /usr/sbin /usr/lib)
AC_DEFINE_UNQUOTED(SENDMAIL, "$ac_cv_path_SENDMAIL")

AC_PATH_PROG(ISPELL, ispell, no)
if test $ISPELL != no; then
	AC_DEFINE_UNQUOTED(ISPELL, "$ISPELL")
fi

AC_HEADER_STDC

AC_CHECK_HEADERS(stdarg.h sys/ioctl.h)

AC_TYPE_SIGNAL

AC_DECL_SYS_SIGLIST

dnl need this for DEC alpha
AC_CHECK_SIZEOF(long)

AC_TYPE_PID_T

AC_CHECK_FUNCS(setegid srand48 strerror)

AC_REPLACE_FUNCS(strcasecmp)

if test -f ../libbalsa/libbalsa.c ; then
# if we're part of balsa, we're part of
# gnome and thus have snprintf and vsnprintf
  AC_DEFINE(HAVE_SNPRINTF)
  AC_DEFINE(HAVE_VSNPRINTF)
else
# otherwise test as usual
  mutt_cv_snprintf=no
  AC_CHECK_FUNC(snprintf, [AC_DEFINE(HAVE_SNPRINTF)], [mutt_cv_snprintf=yes])
  AC_CHECK_FUNC(vsnprintf, [AC_DEFINE(HAVE_VSNPRINTF)], [mutt_cv_snprintf=yes])
  if test $mutt_cv_snprintf = yes; then
    LIBOBJS="$LIBOBJS snprintf.o"
  fi
fi

dnl SCO uses chsize() instead of ftruncate()
AC_CHECK_FUNCS(ftruncate, break, [AC_CHECK_LIB(x, chsize)])

dnl SCO has strftime() in libintl
AC_CHECK_FUNCS(strftime, break, [AC_CHECK_LIB(intl, strftime)])

mutt_cv_regex=yes
AC_ARG_WITH(rx, [  --with-rx[=DIR]            Use GNU rx ],
	[if test $withval != yes; then
		if test -d $withval/lib; then
			LIBS="$LIBS -L$withval/lib -lrx"
			CPPFLAGS="-I$withval/include $CPPFLAGS"
		else
			LIBS="$LIBS -L$withval -lrx"
			CPPFLAGS="-I$withval $CPPFLAGS"
		fi
		AC_DEFINE(USE_GNU_RX)
		mutt_cv_regex=no
	fi],
	[AC_CHECK_FUNCS(regcomp, mutt_cv_regex=no)])

if test $mutt_cv_regex = yes; then
	if test -d ../rx-1.5; then
		LIBS="$LIBS ../rx-1.5/rx/librx.a"
		CPPFLAGS="-I../rx-1.5/rx $CPPFLAGS"
	else
		LIBOBJS="$LIBOBJS rx/librx.a"
		CPPFLAGS="-I\$(srcdir)/rx $CPPFLAGS"
	fi
	AC_DEFINE(USE_GNU_RX)
fi

AC_ARG_WITH(homespool, [  --with-homespool[=FILE]    file in user's directory where new mail is spooled], with_homespool=${withval})
if test x$with_homespool != x; then
	if test $with_homespool = yes; then
		with_homespool=mailbox
	fi
	AC_DEFINE_UNQUOTED(MAILPATH, "$with_homespool")
	AC_DEFINE(HOMESPOOL)
	AC_DEFINE(USE_DOTLOCK)
	mutt_cv_setgid=no
else
	AC_ARG_WITH(mailpath, [  --with-mailpath=DIR        directory where spool mailboxes are located],
		[mutt_cv_mailpath=$withval],
		[ AC_CACHE_CHECK(where new mail is stored, mutt_cv_mailpath,
			[mutt_cv_mailpath=no
			if test -d /var/mail; then
				mutt_cv_mailpath=/var/mail
			elif test -d /var/spool/mail; then
				mutt_cv_mailpath=/var/spool/mail
			elif test -d /usr/spool/mail; then
				mutt_cv_mailpath=/usr/spool/mail
			elif test -d /usr/mail; then
				mutt_cv_mailpath=/usr/mail
			fi])
		])
	if test $mutt_cv_mailpath = no; then
		AC_MSG_ERROR("Could not determine where new mail is stored.")
	fi
	AC_DEFINE_UNQUOTED(MAILPATH, "$mutt_cv_mailpath")

	AC_CACHE_CHECK(if $mutt_cv_mailpath is world writable, mutt_cv_worldwrite, AC_TRY_RUN([#include <sys/types.h>
#include <sys/stat.h>

int main (int argc, char **argv)
{
	struct stat s;

	stat ("$mutt_cv_mailpath", &s);
	if (s.st_mode & S_IWOTH) exit (0);
	exit (1);
}], [mutt_cv_worldwrite=yes], [mutt_cv_worldwrite=no]))

	mutt_cv_setgid=no
	if test $mutt_cv_worldwrite = yes; then
		AC_DEFINE(USE_DOTLOCK)
	else

		AC_CACHE_CHECK(if $mutt_cv_mailpath is group writable, mutt_cv_groupwrite, AC_TRY_RUN([#include <sys/types.h>
#include <sys/stat.h>

int main (int argc, char **argv)
{
	struct stat s;

	stat ("$mutt_cv_mailpath", &s);
	if (s.st_mode & S_IWGRP) exit (0);
	exit (1);
}], [mutt_cv_groupwrite=yes], [mutt_cv_groupwrite=no]))

dnl		if test $mutt_cv_groupwrite = yes; then
dnl			AC_DEFINE(USE_DOTLOCK)
dnl			AC_DEFINE(USE_SETGID)
dnl			mutt_cv_setgid=yes
dnl		fi
	fi
fi

AC_ARG_WITH(sharedir, [  --with-sharedir=PATH       specify where to put arch independent files],
	[mutt_cv_sharedir=$withval],
	[ AC_CACHE_CHECK(where to put architecture-independent data files,
		       mutt_cv_sharedir,
		[if test x$prefix = xNONE; then
			mutt_cv_prefix=$ac_default_prefix
		else
			mutt_cv_prefix=$prefix
		fi
		if test -d ${mutt_cv_prefix}/share; then
			if test -d ${mutt_cv_prefix}/share/misc; then
				mutt_cv_sharedir='${prefix}/share/misc'
			else
				mutt_cv_sharedir='${prefix}/share'
			fi
		else
			mutt_cv_sharedir='${libdir}'
		fi])
	])

sharedir=$mutt_cv_sharedir
AC_SUBST(sharedir)


AC_ARG_WITH(domain, [  --with-domain=DOMAIN       Specify your DNS domain name ],
	[if test $withval != yes; then
		AC_DEFINE_UNQUOTED(DOMAIN, "$withval")
	fi])

AC_ARG_ENABLE(hidden-host, [  --enable-hidden-host       Only use the domain name for local addresses], AC_DEFINE(HIDDEN_HOST))

dnl AC_ARG_ENABLE(pop, [  --enable-pop               Enable POP3 support],
dnl [
AC_DEFINE(USE_POP)
dnl	AC_CHECK_LIB(socket, socket)
dnl	AC_CHECK_LIB(nsl, gethostbyname)
dnl	LIBOBJS="$LIBOBJS pop.o"
dnl ])

dnl AC_ARG_ENABLE(imap, [  --enable-imap              Enable IMAP support],
dnl [
AC_DEFINE(USE_IMAP)
dnl	AC_CHECK_LIB(socket, socket)
dnl	AC_CHECK_LIB(nsl, gethostbyname)
dnl	LIBOBJS="$LIBOBJS imap.o"
dnl ])

AC_ARG_ENABLE(flock, [  --enable-flock             Use flock() to lock files],
	[if test $enableval = yes; then
		AC_DEFINE(USE_FLOCK)
	fi])

mutt_cv_fcntl=yes
AC_ARG_ENABLE(fcntl, [  --disable-fcntl            Do NOT use fcntl() to lock files ],
	[if test $enableval = no; then mutt_cv_fcntl=no; fi])

if test $mutt_cv_fcntl = yes; then
	AC_DEFINE(USE_FCNTL)
fi

AC_ARG_ENABLE(nfs-fix, [  --enable-nfs-fix           Work around an NFS with broken attributes caching ],
	[if test x$enableval = xyes; then
                AC_DEFINE(NFS_ATTRIBUTE_HACK)
        fi])

AC_ARG_ENABLE(buffy-size, [  --enable-buffy-size        Use file size attribute instead of access time ],
	[if test x$enableval = xyes; then
                AC_DEFINE(BUFFY_SIZE)
        fi])

AC_ARG_ENABLE(locales-fix, [  --enable-locales-fix       The result of isprint() is unreliable ],
	[if test x$enableval = xyes; then
                AC_DEFINE(LOCALES_HACK)
        fi])

AC_ARG_WITH(exec-shell, [  --with-exec-shell=SHELL    Specify alternate shell (ONLY if /bin/sh is broken)],
	[if test $withval != yes; then
		AC_DEFINE_UNQUOTED(EXECSHELL, "$withval")
	fi])

AC_ARG_ENABLE(exact-address, [  --enable-exact-address     enable regeneration of email addresses],
	[if test $enableval = yes; then
		AC_DEFINE(EXACT_ADDRESS)
	fi])

AC_SUBST(MUTT_MAJOR)
AC_SUBST(MUTT_REVISION)
AC_SUBST(MUTT_PATCHLEVEL)
AC_SUBST(MUTT_VERSION)

AC_OUTPUT(Makefile)
